# Generated by Django 5.0.1 on 2025-05-13 15:27

import dashboard.models.validators
import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, validators=[dashboard.models.validators.validate_field])),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='EncounterSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, validators=[dashboard.models.validators.validate_field])),
            ],
            options={
                'verbose_name': 'Source',
                'verbose_name_plural': 'Source',
            },
        ),
        migrations.CreateModel(
            name='MultiModalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_view', models.BooleanField(default=False, verbose_name='Provider View')),
                ('patient_view', models.BooleanField(default=False, verbose_name='Patient View')),
                ('room_view', models.BooleanField(default=False, verbose_name='Room View')),
                ('audio', models.BooleanField(default=False, verbose_name='Audio')),
                ('transcript', models.BooleanField(default=False, verbose_name='Transcript')),
                ('patient_survey', models.BooleanField(default=False, verbose_name='Patient Survey')),
                ('provider_survey', models.BooleanField(default=False, verbose_name='Provider Survey')),
                ('patient_annotation', models.BooleanField(default=False, verbose_name='Patient Annotation')),
                ('provider_annotation', models.BooleanField(default=False, verbose_name='Provider Annotation')),
                ('rias_transcript', models.BooleanField(default=False, verbose_name='RIAS Transcript')),
                ('rias_codes', models.BooleanField(default=False, verbose_name='RIAS Codes')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Multi Modal Data Path',
                'verbose_name_plural': 'Multi Modal Data Paths',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[dashboard.models.validators.validate_field])),
                ('address_1', models.CharField(blank=True, max_length=100, null=True, validators=[dashboard.models.validators.validate_address])),
                ('address_2', models.CharField(blank=True, max_length=100, null=True, validators=[dashboard.models.validators.validate_address])),
                ('city', models.CharField(blank=True, max_length=100, null=True, validators=[dashboard.models.validators.validate_field])),
                ('state', models.CharField(blank=True, max_length=100, null=True, validators=[dashboard.models.validators.validate_field])),
                ('country', models.CharField(blank=True, max_length=100, null=True, validators=[dashboard.models.validators.validate_field])),
                ('zip_code', models.CharField(blank=True, max_length=5, null=True, validators=[dashboard.models.validators.validate_numeric])),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, validators=[dashboard.models.validators.validate_phone_number])),
                ('website', models.URLField(blank=True, null=True, validators=[dashboard.models.validators.validate_website])),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_id', models.PositiveIntegerField(unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, validators=[dashboard.models.validators.validate_field])),
                ('last_name', models.CharField(blank=True, max_length=255, validators=[dashboard.models.validators.validate_field])),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[dashboard.models.validators.validate_time])),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('UN', 'Unknown or Not Reported')], max_length=5)),
                ('race', models.CharField(blank=True, choices=[('AI', 'American Indian or Alaska Native'), ('A', 'Asian'), ('NHPI', 'Native Hawaiian or Other Pacific Islander'), ('B', 'Black or African American'), ('W', 'White'), ('M', 'More than One Race'), ('UN', 'Unknown or Not Reported')], max_length=5)),
                ('ethnicity', models.CharField(blank=True, choices=[('H', 'Hispanic or Latino'), ('NH', 'Not Hispanic or Latino'), ('UN', 'Unknown or Not Reported Ethnicity')], max_length=5)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_id', models.PositiveIntegerField(unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, validators=[dashboard.models.validators.validate_field])),
                ('last_name', models.CharField(blank=True, max_length=255, validators=[dashboard.models.validators.validate_field])),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[dashboard.models.validators.validate_time])),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('UN', 'Unknown or Not Reported')], max_length=5)),
                ('race', models.CharField(blank=True, choices=[('AI', 'American Indian or Alaska Native'), ('A', 'Asian'), ('NHPI', 'Native Hawaiian or Other Pacific Islander'), ('B', 'Black or African American'), ('W', 'White'), ('M', 'More than One Race'), ('UN', 'Unknown or Not Reported')], max_length=5)),
                ('ethnicity', models.CharField(blank=True, choices=[('H', 'Hispanic or Latino'), ('NH', 'Not Hispanic or Latino'), ('UN', 'Unknown or Not Reported Ethnicity')], max_length=5)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Provider',
                'verbose_name_plural': 'Providers',
            },
        ),
        migrations.CreateModel(
            name='Tier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier_name', models.CharField(max_length=10, validators=[dashboard.models.validators.validate_field])),
                ('level', models.PositiveIntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(5)])),
                ('complete_deidentification', models.BooleanField(default=False)),
                ('blur_sexually_explicit_body_parts', models.BooleanField(default=False)),
                ('blur_face', models.BooleanField(default=False)),
                ('obscure_voice', models.BooleanField(default=False)),
                ('dua', models.BooleanField(default=False)),
                ('external_access', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Encounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('csn_number', models.CharField(blank=True, max_length=10, null=True, unique=True, validators=[dashboard.models.validators.validate_numeric], verbose_name='CSN Number')),
                ('case_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Case ID')),
                ('encounter_date_and_time', models.DateTimeField(default=datetime.datetime.now, validators=[dashboard.models.validators.validate_time], verbose_name='Encounter Date and Time')),
                ('provider_satisfaction', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Provider Satisfaction')),
                ('patient_satisfaction', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Patient Satisfaction')),
                ('type', models.CharField(choices=[('clinic', 'Clinic'), ('simcenter', 'Sim Center'), ('pennpersonalizedcare', 'Penn Personalized Care')], default='clinic', max_length=20)),
                ('is_deidentified', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Is Deidentified')),
                ('is_restricted', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Is Restricted')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.department')),
                ('encounter_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.encountersource', verbose_name='Source')),
                ('multi_modal_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='encounter', to='dashboard.multimodaldata')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.patient')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.provider')),
                ('tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='encounters', to='dashboard.tier')),
            ],
            options={
                'verbose_name': 'Encounter',
                'verbose_name_plural': 'Encounters',
            },
        ),
        migrations.CreateModel(
            name='EncounterFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_type', models.CharField(blank=True, choices=[('room_view', 'Room View'), ('provider_view', 'Provider View'), ('patient_view', 'Patient View'), ('audio', 'Audio'), ('transcript', 'Transcript'), ('patient_survey', 'Patient Survey'), ('provider_survey', 'Provider Survey'), ('patient_annotation', 'Patient Annotation'), ('provider_annotation', 'Provider Annotation'), ('rias_transcript', 'RIAS Transcript'), ('rias_codes', 'RIAS Codes'), ('other', 'Other')], max_length=50, null=True)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('file_path', models.CharField(blank=True, max_length=255, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('encounter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='dashboard.encounter')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[dashboard.models.validators.validate_time])),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True, validators=[dashboard.models.validators.validate_phone_number])),
                ('address_1', models.CharField(blank=True, max_length=100, null=True, validators=[dashboard.models.validators.validate_address])),
                ('address_2', models.CharField(blank=True, max_length=100, null=True, validators=[dashboard.models.validators.validate_address])),
                ('city', models.CharField(blank=True, max_length=100, null=True, validators=[dashboard.models.validators.validate_field])),
                ('state', models.CharField(blank=True, max_length=100, null=True, validators=[dashboard.models.validators.validate_field])),
                ('country', models.CharField(blank=True, max_length=100, null=True, validators=[dashboard.models.validators.validate_field])),
                ('zip_code', models.CharField(blank=True, max_length=5, null=True, validators=[dashboard.models.validators.validate_numeric])),
                ('bio', models.CharField(blank=True, max_length=200, null=True, validators=[dashboard.models.validators.validate_field])),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.tier')),
            ],
        ),
    ]
