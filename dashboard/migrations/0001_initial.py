# Generated by Django 5.0.1 on 2024-03-31 23:49

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
            },
        ),
        migrations.CreateModel(
            name="EncounterSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "verbose_name": "Encounter Source",
                "verbose_name_plural": "Encounter Source",
            },
        ),
        migrations.CreateModel(
            name="MultiModalDataPath",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "multi_modal_data_id",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Multi Modal Data ID"
                    ),
                ),
                (
                    "provider_view",
                    models.URLField(
                        blank=True, null=True, verbose_name="Provider View"
                    ),
                ),
                (
                    "patient_view",
                    models.URLField(blank=True, null=True, verbose_name="Patient View"),
                ),
                (
                    "room_view",
                    models.URLField(blank=True, null=True, verbose_name="Room View"),
                ),
                ("audio", models.URLField(blank=True, null=True, verbose_name="Audio")),
                (
                    "transcript",
                    models.URLField(blank=True, null=True, verbose_name="Transcript"),
                ),
                (
                    "patient_survey",
                    models.URLField(
                        blank=True, null=True, verbose_name="Patient Survey"
                    ),
                ),
                (
                    "provider_survey",
                    models.URLField(
                        blank=True, null=True, verbose_name="Provider Survey"
                    ),
                ),
                (
                    "rias_transcript",
                    models.URLField(
                        blank=True, null=True, verbose_name="RIAS Transcript"
                    ),
                ),
                (
                    "rias_codes",
                    models.URLField(blank=True, null=True, verbose_name="RIAS Codes"),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Multi Modal Data Path",
                "verbose_name_plural": "Multi Modal Data Paths",
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("patient_id", models.CharField(max_length=200, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=200)),
                ("last_name", models.CharField(blank=True, max_length=200)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Male"),
                            ("F", "Female"),
                            ("UN", "Unknown or Not Reported"),
                        ],
                        max_length=5,
                    ),
                ),
                (
                    "race",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AI", "American Indian or Alaska Native"),
                            ("A", "Asian"),
                            ("NHPI", "Native Hawaiian or Other Pacific Islander"),
                            ("B", "Black or African American"),
                            ("W", "White"),
                            ("M", "More than One Race"),
                            ("UN", "Unknown or Not Reported"),
                        ],
                        max_length=5,
                    ),
                ),
                (
                    "ethnicity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("H", "Hispanic or Latino"),
                            ("NH", "Not Hispanic or Latino"),
                            ("UN", "Unknown or Not Reported Ethnicity"),
                        ],
                        max_length=5,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Patient",
                "verbose_name_plural": "Patients",
            },
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("provider_id", models.CharField(max_length=200, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=200)),
                ("last_name", models.CharField(blank=True, max_length=200)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Male"),
                            ("F", "Female"),
                            ("UN", "Unknown or Not Reported"),
                        ],
                        max_length=5,
                    ),
                ),
                (
                    "race",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("AI", "American Indian or Alaska Native"),
                            ("A", "Asian"),
                            ("NHPI", "Native Hawaiian or Other Pacific Islander"),
                            ("B", "Black or African American"),
                            ("W", "White"),
                            ("M", "More than One Race"),
                            ("UN", "Unknown or Not Reported"),
                        ],
                        max_length=5,
                    ),
                ),
                (
                    "ethnicity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("H", "Hispanic or Latino"),
                            ("NH", "Not Hispanic or Latino"),
                            ("UN", "Unknown or Not Reported Ethnicity"),
                        ],
                        max_length=5,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Provider",
                "verbose_name_plural": "Providers",
            },
        ),
        migrations.CreateModel(
            name="Encounter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("case_id", models.CharField(max_length=200, unique=True)),
                (
                    "encounter_date_and_time",
                    models.DateTimeField(
                        default=datetime.datetime.now,
                        verbose_name="Encounter Date and Time",
                    ),
                ),
                (
                    "patient_satisfaction",
                    models.IntegerField(default=0, verbose_name="Patient Satisfaction"),
                ),
                (
                    "provider_satisfaction",
                    models.IntegerField(
                        default=0, verbose_name="Provider Satisfaction"
                    ),
                ),
                (
                    "is_deidentified",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        verbose_name="Is Deidentified",
                    ),
                ),
                (
                    "is_restricted",
                    models.BooleanField(
                        choices=[(True, "Yes"), (False, "No")],
                        default=True,
                        verbose_name="Is Restricted",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.department",
                    ),
                ),
                (
                    "encounter_source",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.encountersource",
                        verbose_name="Encounter Source",
                    ),
                ),
                (
                    "multi_modal_data",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.multimodaldatapath",
                        verbose_name="Multi Modal Data Path",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.patient",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.provider",
                    ),
                ),
            ],
            options={
                "verbose_name": "Encounter",
                "verbose_name_plural": "Encounters",
            },
        ),
    ]
